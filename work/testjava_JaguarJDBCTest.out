Picked up _JAVA_OPTIONS: -Djava.net.preferIPv4Stack=true
t.testJaguarDataSource ......................

uid: k1k1 addr: v1v1
uid: n11
line\'2 addr: v11
val"ue
uid: 刘东 addr: 田贝路12号，深圳
uid: 刘凯乐 addr: 民治路18号，深圳
uid: 刘宇鹏 addr: 北四环路200号，北京
uid: 刘翔 addr: 古力路18号，上海
uid: 张军 addr: 南四环路220号，北京
uid: 张明 addr: 枫涟路123号，上海
uid: 李世民 addr: 胜利街12号，北京
uid: 李为民 addr: 胜利街12号，北京
insert into jbench values ( 'n11
line\'2', 'v11
val"ue' ) ; 
select * from jbench where uid like 'n1%';
uid: n11
line\'2 addr: v11
val"ue


t.testJaguarDataSourcePrepare ....................

uid: k1k1 m1: 
uid: n11
line\'2 m1: 
uid: 刘东 m1: 
uid: 刘凯乐 m1: 
uid: 刘宇鹏 m1: 
uid: 刘翔 m1: 
uid: 张军 m1: 
uid: 张明 m1: 
uid: 李世民 m1: 
uid: 李为民 m1: 
test ResultSetMetaData after next ...
coltype=0
colname=null
coltype=0
colname=null
select * from asctable where id <=2;
java.sql.SQLException: executeQuery failed: select * from asctable where id <=2; (test.asctable does not exist [300])
	at com.jaguar.jdbc.internal.SQLExceptionMapper.get(SQLExceptionMapper.java:106)
	at com.jaguar.jdbc.JaguarStatement.executeQuery(JaguarStatement.java:143)
	at com.jaguar.jdbc.JaguarPreparedStatement.executeQuery(JaguarPreparedStatement.java:129)
	at JaguarJDBCTest.testJaguarDataSourcePrepare(JaguarJDBCTest.java:205)
	at JaguarJDBCTest.main(JaguarJDBCTest.java:37)
Caused by: com.jaguar.jdbc.internal.common.QueryException: executeQuery failed: select * from asctable where id <=2; (test.asctable does not exist [300])
	at com.jaguar.jdbc.internal.jaguar.JaguarProtocol.executeQuery(JaguarProtocol.java:246)
	at com.jaguar.jdbc.internal.jaguar.JaguarProtocol.executeQuery(JaguarProtocol.java:238)
	at com.jaguar.jdbc.JaguarStatement.executeQuery(JaguarStatement.java:138)
	... 3 more


t.testMetaData ...................................

Database Product Name: Jaguar
Database Product Version: 2.0
Logged User: admin
JDBC Driver: Jaguar-JDBC
Driver Version: 2.0


metadata.getTables ... 
table: asc1 cat: test type: TABLE
table: base64 cat: test type: TABLE
table: img cat: test type: TABLE
table: inst1 cat: test type: TABLE
table: inst2 cat: test type: TABLE
table: j0 cat: test type: TABLE
table: j1 cat: test type: TABLE
table: j2 cat: test type: TABLE
table: j3 cat: test type: TABLE
table: j4 cat: test type: TABLE
table: j5 cat: test type: TABLE
table: j6 cat: test type: TABLE
table: j7 cat: test type: TABLE
table: j8 cat: test type: TABLE
table: j9 cat: test type: TABLE
table: jbench cat: test type: TABLE
table: join1 cat: test type: TABLE
table: join2 cat: test type: TABLE
table: media cat: test type: TABLE
table: mem1 cat: test type: TABLE
table: nokey cat: test type: TABLE
table: star1 cat: test type: TABLE
table: star2 cat: test type: TABLE
table: star3 cat: test type: TABLE
table: starhost cat: test type: TABLE
table: t12 cat: test type: TABLE
table: tms1 cat: test type: TABLE
table: tms2 cat: test type: TABLE
table: unittest1 cat: test type: TABLE
table: unittest2 cat: test type: TABLE
table: unittest3 cat: test type: TABLE
table: unittest_old cat: test type: TABLE
metadata.getTables done 
metadata.getColumns ...
getcolumns: table: jbench col: uid
    datatype: 1 typename: CHAR
    size: 16 decimaldigits: 0
getcolumns: table: jbench col: addr
    datatype: 1 typename: CHAR
    size: 32 decimaldigits: 0
getcolumns: table: jbench col: spare_
    datatype: 1 typename: CHAR
    size: 14 decimaldigits: 0
metadata.getColumns done 
metadata.getCatalogs ...
db: test
metadata.getCatalogs done 


t.testDriver .........................................

drop table t12 ... 
Done create table 
Done, insert. executeQuery ...
desc t12 ...
